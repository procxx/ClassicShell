; This file contains the extra customization options that don't fit in the Settings box. Before changing any of them read the
; description carefully.
; Lines in this file that start with ; (semicolon) are ignored.
;
; Note: After modifying this file you have to open a new Explorer window to use the new settings.
; Another Note: Unlike the regular settings, which are per user, the settings in this file affect all users.
;
; =============================================================================


; EnableSettings - Set to 0 to remove access to the Classic Explorer settings. Default is 1
EnableSettings=

; SmallIconSize - The size of the toolbar icons in pixels. By default it is 16 for DPI<120 and 24 for DPI>=120
SmallIconSize=

; LargeIconSize - Same as above, but for "Big Buttons". By default it is 24 for DPI<120 and 32 for DPI>=120
LargeIconSize=

; MenuIconSize - The size of the menu icons in pixels. The menus show when a toolbar button has a dropdown arrow, or when the toolbar doesn't
; fit on screen. Use 0 to disable icons in menus. Default is 16
MenuIconSize=

; ForceRefreshWin7 - This is a workaround for a bug in Explorer for Windows 7. Sometimes when a new Explorer window is opened the status bar
; is blank. Setting this parameter to 1 will force the Explorer window to refresh itself after it is open for fix the status text.
; Set to 0 to disable if you notice a slowdown when opening a new Explorer. Default is 1
ForceRefreshWin7=

; AddressBarHistory - This determines the history of the address bar when you click on the drop arrow
;   0 - normal history (recently visited folders and websites)
;   1 - simple path (shows the parents of the current folder all the way to the Desktop)
;   2 - extended path (besides the parents, shows all immediate folders of the Desktop and Computer. This is how it works in XP)
; Default is 2 when breadcrumbs are disabled and 0 when they are not
AddressBarHistory=

; FixFolderScroll - This is a workaround for a bug in Explorer for Windows 7. If you select a folder in the navigation pane and then expand it,
; the navigation pane will scroll up instead of down.
; Set to 0 to disable this fix if you notice problems with the scrolling of the navigation pane. Default is 1
FixFolderScroll=

; TreeItemSpacing - This is a number for controlling the spacing between the items in the folder tree. Use positive numbers to increase the
; spacing, and negative numbers to reduce the spacing. Default is 0 (no change)
TreeItemSpacing=

; FixSearchResize - This is a workaround for a bug in Explorer for Windows 7. When the Up button in the title bar is enabled, it breaks the
; resizing of the Search box of Explorer. This is because the Search becomes the 4th item instead of the 3rd.
; Set to 0 to disable this fix if it gives you trouble. Default is 1 for Windows 7 and 0 for Vista
FixSearchResize=

; HideSearch - Set this to 1 to hide the search box in Explorer. Default is 0, which leaves the search box alone
HideSearch=

; AutoNavDelay - Delay in ms for updating the file pane when you go up and down the navigation pane with the keyboard. Use larger value
; on slow machines to let you go up/down multiple folders without the performance hit of updating the file pane. Default is 100
AutoNavDelay=

; ToolbarSameSize - When set to 1 all toolbar buttons are the same size, determined by the widest button. Set to 0 to make each button calculate its
; own size depending on its text. This setting is only used when ToolbarListMode=0. Default is 0
ToolbarSameSize=

; ToolbarListMode - When set to 1 the toolbar is in list mode. The button text shows next to the icon instead of under the icon. Default is 0
ToolbarListMode=

; ResizeableToolbar - When this is set to 1, the toolbar can be resized to be smaller than its full size. The buttons that don't fit on screen can
; be accessed by clicking on the small chevron button. Default is 0
ResizeableToolbar=

; UpIconNormal, UpIconHot, UpIconPressed, UpIconDisabled - Use these to provide custom icons for the Up button in the title bar
; There is one icon for each state - normal, hot (when the mouse is over the button), pressed, and disabled
UpIconNormal=
UpIconHot=
UpIconPressed=
UpIconDisabled=

; UpIconSize - The size of the Up button in the title bar. By default it is 30 for DPI<120 and 36 for DPI>=120
UpIconSize=

; ShareOverlayIcon - Use this to provide a custom icon overlay for the shared folders. The setting can be:
;   - a path to an .ico file
;   - a path to a .dll or .exe, followed by an icon resource ID
; Use "%windir%\system32\shell32.dll,29" to get the XP-style hand icon (the icon with ID 29 from the shell32.dll system file)
; The default is "%windir%\system32\imageres.dll,164" (same as the sharing icon on Vista)
; NOTE: After changing the icon you have to log off to apply the new setting
; Example: ShareOverlayIcon=%windir%\system32\imageres.dll,164
ShareOverlayIcon=

; OverwriteAlertLevel - This setting adds a sound alert to the copy confirmation dialog when a system or read-only file is about to be overwritten.
; 0 - no alert, 1 - alert for system files, 2 - alert for system and read-only files
; Default is 0
OverwriteAlertLevel=

; MoreProgressDelay - Delay (in ms) for showing more details in the progress dialog. On Windows 7 with Aero if the details are shown too soon
; the progress dialog flickers badly. Use a delay of at least 250 ms to avoid the flicker. The delay is also useful if you want to see
; the details only for longer operations.
; The default is 500 for Windows 7 Aero, and 0 otherwise
MoreProgressDelay=

; Language - Use this setting to override the language for Classic Explorer. Get the language names from the ExplorerL10N.ini file.
; By default the current OS language is used
; Example: Language=fr-FR
Language=

; =============================================================================
; The rest of this file is used to customize the layout of the Explorer toolbar
;
; Use the ToolbarItems property to describe what buttons you want to have in the toolbar. The format is: item1, item2, item3, ...
; By default ToolbarItems is disabled by the EnableCustomToolbar setting. Use EnableCustomToolbar=1 to enable the customizations

; Every item must be described later in this file. For every item you must set the command (what it does), the tooltip, the name, and the icon.
; Use SEPARATOR to insert separators between items
;
; The possible commands are:
;   up - go up one folder
;   cut, copy, paste, delete - guess what they do
;   properties - shows the properties of the selection
;   email - emails the selected files
;   settings - shows the Classic Explorer settings
;   moveto, copyto - move or copy the selection to another folder
;   undo - reverts the last file operation
;   redo - repeats the undone operation
;   selectall - selects all items in the current folder
;   deselect - deselects all items in the current folder
;   invertselection - reverses which items are selected and which are not
;   back, forward - go to the previous or next visited folder
;   refresh - refreshes the Explorer window
;   rename - renames the selected file in Explorer
;   viewtiles - switch the view to Tiles
;   viewdetails - switch the view to Details
;   viewlist - switch the view to List
;   viewcontent - switch the view to Content (Windows 7 only)
;   viewicons1 - switch the view to Small Icons
;   viewicons2 - switch the view to Medium Icons
;   viewicons3 - switch the view to Large Icons
;   viewicons4 - switch the view to Extra Large Icons
;   open <folder name> - open the given folder in the current browser (hold down Control to open in a new browser)
; It is also possible to provide a custom executable string. The string can contain environment variables like %windir%. %1 is replaced by the path to
; the current folder. %2 is replaced by the path to the currently selected file (only when a single file is selected). Examples:
;   %windir%\notepad.exe %2
;   http://www.google.com
;   cmd /k pushd %1
; It is not recommended to use the same command for more than one button. The Up, Back and Forward buttons will not get disabled correctly if there are
; more than one of them.
;
; The tip can be either a full string (like "Copy To Folder"), or a localized item from ExplorerL10N.ini prefixed with $ (like "$Toolbar.Cut")
;
; The name is optional. When a name text is given, it will appear under the icon of the button. The name can be a full string or a localized item,
; just like the tip text.
;
; The icon can be specified in 2 ways:
;   "resource file,icon ID". For example "%windir%\notepad.exe,2". Do not include the quotes and do not leave space between the file name and the comma.
;   "icon file". For example "C:\Program Files\Mozilla Thunderbird\Email.ico"
; Both formats support environment variables for the file name.
; Use .Icon to set the normal icon and .IconDisabled to set the disabled icon (for buttons like Up, Back and Forward). When the disabled icon is not set
; the normal icon is converted to grayscale.
; Set .Icon=NONE to get no icon on the button (useful for text-only buttons)
; 
; You can also create buttons with dropdown menus. For example this will create a button DrivesItem, which opens a menu with 3 sub-items:
;   DrivesItem.Items=DriveA, DriveC, DriveD
; Of course the items DriveA, DriveC and DriveD must also be defined later in the file. You have to provide them with icon, name and command.
;
; Another possibility is to create a menu from a folder on disk:
;   Button.Link=<path>
; For example this will show your Internet Explorer favorites:
;   Button.Link=%USERPROFILE%\Favorites
; This will show your favorite links:
;   Button.Link=%USERPROFILE%\Links
; This will give you the contents of Computer:
;   Button.Link=::{20D04FE0-3AEA-1069-A2D8-08002B30309D}
;
;
; NOTE TO DEVELOPERS:
; Buttons for custom commands can be checked or disabled. The toolbar checks the registry key HKCU\Software\IvoSoft\ClassicExplorer for a DWORD value
; with the name of the button (the name used in ToolbarItems). 0 means normal, 1 is disabled and 2 is checked. The toolbar reads the registry keys
; on startup. To force the buttons to update their state after that you need to find all Explorer windows, locate the child window with class
; "ClassicShell.CBandWindow", and send it (or post) a message WM_CLEAR. This is useful if you are developing a custom exe to be used by the toolbar.


; EnableCustomToolbar - when this is 0, the rest of this ini file is ignored and you get the standard toolbar. Set to 1 to enable the customizations
EnableCustomToolbar=0

ToolbarItems=UpItem, CutItem, CopyItem, PasteItem, DeleteItem, PropertiesItem, EmailItem, SEPARATOR, SettingsItem

; All toolbar items described here will be ignored until EnableCustomToolbar is set to 1
UpItem.Command=up
UpItem.Tip=$Toolbar.GoUp
UpItem.Name=Up
UpItem.Icon=,2
UpItem.IconDisabled=,3

CutItem.Command=cut
CutItem.Tip=$Toolbar.Cut
CutItem.Name=Cut
CutItem.Icon=shell32.dll,16762

CopyItem.Command=copy
CopyItem.Tip=$Toolbar.Copy
CopyItem.Name=Copy
CopyItem.Icon=shell32.dll,243

PasteItem.Command=paste
PasteItem.Tip=$Toolbar.Paste
PasteItem.Name=Paste
PasteItem.Icon=shell32.dll,16763

DeleteItem.Command=delete
DeleteItem.Tip=$Toolbar.Delete
DeleteItem.Name=Delete
DeleteItem.Icon=shell32.dll,240

PropertiesItem.Command=properties
PropertiesItem.Tip=$Toolbar.Properties
PropertiesItem.Name=Properties
PropertiesItem.Icon=shell32.dll,253

EmailItem.Command=email
EmailItem.Tip=$Toolbar.Email
EmailItem.Name=E-mail
EmailItem.Icon=shell32.dll,265

SettingsItem.Command=settings
SettingsItem.Tip=$Toolbar.Settings
SettingsItem.Name=Settings
; when the resource file is missing, the ClassicExplorer.dll is used instead. The Classic Shell logo icon has ID=1
SettingsItem.Icon=,1
