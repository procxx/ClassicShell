; This file contains the extra customization options that don't fit in the Settings box. Before changing any of them read the
; description carefully.
; Lines in this file that start with ; (semicolon) are ignored. Initially all settings have ; in front of them, which disables them.
; Remove the semicolon before setting the value.
;
; Note: After modifying this file you have to open a new Explorer window to use the new settings.
; Another Note: Unlike the regular settings, which are per user, the settings in this file affect all users.
;
; =============================================================================


; SmallIconSize - the size of the toolbar icons in pixels. By default it is 16 for DPI<120 and 24 for DPI>=120
;SmallIconSize=16

; LargeIconSize - Same as above, but for "Big Buttons". By default it is 24 for DPI<120 and 32 for DPI>=120
;LargeIconSize=24

; ForceRefreshWin7 - This is a workaround for a bug in Explorer for Windows 7. Sometimes when a new Explorer window is opened the status bar
; is blank. Setting this parameter to 1 will force the Explorer window to refresh itself after it is open for fix the status text.
; Set to 0 to disable if you notice a slowdown when opening a new Explorer. Default is 1
;ForceRefreshWin7=1

; ToolbarSameSize - When set to 1 all toolbar buttons are the same size, determined by the widest button. Set to 0 to make each button calculate its
; own size depending on its text. Default is 0
;ToolbarSameSize=0


; =============================================================================
; The rest of this file is used to customize the layout of the Explorer toolbar
;
; Use the ToolbarItems property to describe what buttons you want to have in the toolbar. The format is: item1, item2, item3, ...
; By default ToolbarItems is disabled by the semicolon in front of it. Remove the semicolon before customizing your toolbar.

; Every item must be described later in this file. For every item you must set the command (what it does), the tooltip, the name, and the icon.
; Use SEPARATOR to insert separators between items
;
; The possible commands are:
;   up - go up one folder
;   cut, copy, paste, delete - guess what they do
;   properties - shows the properties of the selection
;   email - emails the selected files
;   settings - shows the Classic Explorer settings
;   moveto, copyto - move or copy the selection to another folder
;   undo - reverts the last file operation
;   redo - repeats the undone operation
;   selectall - selects all items in the current folder
;   invertselection - reverses which items are selected and which are not
;   back, forward - go to the previous or next visited folder
;   refresh - refreshes the Explorer window
; It is also possible to provide a custom executable string. The string can contain environment variables like %windir%. %1 is replaced by the path to
; the current folder. %2 is replaced by the path to the currently selected file (only when a single file is selected). Examples:
;   %windir%\notepad.exe %2
;   http://www.google.com
;   cmd /k pushd %1
;
; The tip can be either a full string (like "Copy To Folder"), or a localized item from ExplorerL10N.ini prefixed with $ (like "$Toolbar.Cut")
;
; The name is optional. When a name text is given, it will appear under the icon of the button. The name can be a full string or a localized item,
; just like the tip text.
;
; The icon can be specified in 2 ways:
;   "resource file,icon ID". For example "%windir%\notepad.exe,2". Do not include the quotes and do not leave space between the file name and the comma.
;   "icon file". For example "C:\Program Files\Mozilla Thunderbird\Email.ico"
; Both formats support environment variables for the file name.


;ToolbarItems=UpItem, CutItem, CopyItem, PasteItem, DeleteItem, PropertiesItem, EmailItem, SEPARATOR, SettingsItem

; All toolbar items described here will be ignored until the ToolbarItems property is enabled
UpItem.Command=up
UpItem.Tip=$Toolbar.GoUp
UpItem.Name=Up
UpItem.Icon=shell32.dll,46

CutItem.Command=cut
CutItem.Tip=$Toolbar.Cut
CutItem.Name=Cut
CutItem.Icon=shell32.dll,16762

CopyItem.Command=copy
CopyItem.Tip=$Toolbar.Copy
CopyItem.Name=Copy
CopyItem.Icon=shell32.dll,243

PasteItem.Command=paste
PasteItem.Tip=$Toolbar.Paste
PasteItem.Name=Paste
PasteItem.Icon=shell32.dll,16763

DeleteItem.Command=delete
DeleteItem.Tip=$Toolbar.Delete
DeleteItem.Name=Delete
DeleteItem.Icon=shell32.dll,240

PropertiesItem.Command=properties
PropertiesItem.Tip=$Toolbar.Properties
PropertiesItem.Name=Properties
PropertiesItem.Icon=shell32.dll,253

EmailItem.Command=email
EmailItem.Tip=$Toolbar.Email
EmailItem.Name=E-mail
EmailItem.Icon=shell32.dll,265

SettingsItem.Command=settings
SettingsItem.Tip=$Toolbar.Settings
SettingsItem.Name=Settings
; when the resource file is missing, the ClassicExplorer.dll is used instead. it has a single icon with ID 217
SettingsItem.Icon=,217
