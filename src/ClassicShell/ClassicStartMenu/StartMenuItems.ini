; This file is used to customize the items in the classic start menu. You can add, remove or rearrange the items, as well as change
; their name, icon and functionality. The possibilities are limitless.
;
; Lines in this file that start with ; (semicolon) are ignored. Initially all settings have ; in front of them, which disables them.
; Remove the semicolon before setting the value.
;
; Some menu items have predefined behavior that cannot be changed:
;   MAIN_MENU - this represents the main menu. shows the combined list of the user and common Start Menu folders. Supports drag and drop
;   SEPARATOR - inserts a separator in the menu
;   PROGRAMS - shows combined list of the user and common programs. Supports drag, drop and multi-column view
;   FAVORITES - shows the Favorites folder. Supports drag and drop
;   DOCUMENTS - shows the recent documents. Supports extra items added at the top
;   USER_FILES - shows the user files folder. Can be expandable depending on the ShowUserFiles setting. When expandable, supports drag and drop
;   USER_DOCUMENTS - shows the user documents folder. Can be expandable depending on the ShowUserDocuments setting. When expandable, supports drag and drop
;   USER_PICTURES - shows the user pictures folder. Can be expandable depending on the ShowUserPictures setting. When expandable, supports drag and drop
;   CONTROL_PANEL - shows the Control Panel folder.Can be expandable depending on the "Expand Control Panel" setting. When expandable, supports drag but not drop
;   NETWORK - shows the network connections. Can be expandable depending on the "Expand Network" setting
;   PRINTERS - shows the installed printers. Can be expandable depending on the "Expand Printers" setting
;   COLUMN_PADDING - (only for two-column main menus) moves the rest of the items in the column to the bottom
;   COLUMN_BREAK - (only for two-column main menus) marks the start of the second column
;
; By convention the items ending in "Item" are regular command items and the ones ending in "Menu" are expandable menus.
; This is just a naming convention and not an actual requirement.
; Every item can have some of the following attributes:
;
;   <name>.Items - a list of sub-items for the menu
;
;   <name>.Link - a full path to a file or a folder. Supports environment variables, like %windir%\Notepad.exe
;
;   <name>.Command - this can be one of the commands that the classic start menu supports:
;       - run - shows the Run dialog
;       - help - shows the Help and Support page
;       - logoff - logs off the user. may ask for confirmation depending on the ConfirmLogOff setting
;       - sleep - suspends the computer in sleep state. Doesn't ask
;       - hibernate - suspends the computer in hibernate state. Doesn't ask
;       - restart - restarts the computer. Doesn't ask
;       - shutdown - shuts down the computer. Doesn't ask
;       - switch_user - exits the current session and enters the "switch user" screen
;       - undock - undocks a laptop from its docking station. may be disabled if the computer is not docked
;       - disconnect - disconnects the computer from the terminal session (like Remote Desktop). may be disabled if the computer is not in a terminal session
;       - shutdown_box - shows the Shutdown dialog
;       - search_files - opens the search UI. may be overridden by the SearchFilesCommand setting
;       - search_printer - opens the printer search UI. may be disabled if Active Directory is not available
;       - search_computers - opens the computer search UI. may be disabled if Active Directory is not available
;       - search_people - opens the people search UI. may be disabled if Windows Mail is not available
;       - taskbar_settings - opens the Taskbar and Start Menu settings
;       - menu_settings - opens the Classic Start Menu settings
;     The command can also be something executable - like a file name, a URL, a program name with parameters, for example %windir%\Notepad.exe text.txt
;
;   <name>.Name - the name of the item. if the name starts with $, it is a key in the StartMenuL10N.ini file (for example $Menu.Programs)
;
;   <name>.Tip - the infotip of the item. if the tip starts with $, it is a key in the StartMenuL10N.ini file (for example $Menu.UserFilesTip)
;
;   <name>.Icon - the location of the item's icon. The icon can be specified in 2 ways:
;       "resource file,icon ID". For example "%windir%\notepad.exe,2". Do not include the quotes and do not leave space between the file name and the comma.
;       "icon file". For example "C:\Program Files\Mozilla Thunderbird\Email.ico"
;     Both formats support environment variables for the file name.
;
;   <name>.Settings - additional settings per item. use one or more of these, separated by commas:
;       OPEN_UP - the sub-menu will open up instead of down (if there is room)
;       OPEN_UP_CHILDREN - the children of this sub-menu will open up
;       SORT_ZA - the sub-menu will be sorted in descending order by default
;       SORT_ZA_CHILDREN - the children of this sub-menu will be sorted in descending order
;       SORT_ONCE - the sub-menu will be sorted automatically the first time it is opened. any items added later will be at the bottom
;       ITEMS_FIRST - if the menu item specifies both custom items with .Items and files with .Link, the .Items will appear before the files
;
; Every item must have .Items, .Link or .Command. Some standard items (like USER_DOCUMENTS) have an implicit .Link, which cannot be changed.
;
; It is possible to have both .Items and .Link on the same item. If the link points to a folder, the sub-menu will list the contents of the folder
; followed by the .Items. Double-clicking on the item will open the folder in explorer. If the link points to a file, the sub-menu will just have
; the .Items and double-clicking on the item will execute the file.
;
; Same for .Items and .Command. The sub-menu will have the items and double-click will run the command. For example you can modify the ShutdownItem
; like this:
;   ShutdownItem.Command=shutdown_box
;   ShutdownItem.Name=$Menu.Shutdown
;   ShutdownItem.Items=ShutdownItem1, ShutdownItem2, ShutdownItem3
;   ShutdownItem1.Command=logoff
;   ShutdownItem1.Name=Logoff
;   ShutdownItem2.Command=restart
;   ShutdownItem2.Name=Restart
;   ShutdownItem3.Command=shutdown
;   ShutdownItem3.Name=Shutdown
; This will turn Shutdown into a sub-menu with Logoff, Restart, and Shutdown items, which will immediately carry out the command. For example
; you can press Win, U, R for immediate restart. Double-click on the Shutdown parent will open the Shutdown box where you can choose the next action.
;
; .Link and .Command are similar, but there are few differences. Links always point to a specific shell object. They can get the name and the icon
; from it. Commands always need explicit .Name and .Icon settings, but can have command line parameters.
;
; NOTE: Initially the MAIN_MENU.Items setting is disabled by placing ; (semicolon) in front of it. This instructs the start menu to ignore
; all customizations in this file. Remove the semicolon before you begin customizing the menu.
;
; HELPFUL HINTS:
;   - read here how to launch different Control Panel items: http://msdn.microsoft.com/en-us/library/cc144191(VS.85).aspx. Use these commands in
;     the .Command parameter
;   - when using an icon from a DLL (like shell32.dll) make sure to use the resource ID of the icon and not the index. Most icon extraction tools
;     like IcoFX show you the index. You need a resource editor like Resource Hacker or Visual Studio to get the correct resource ID
;
; =============================================================================

; MAIN_MENU.Items - the structure of the main menu. You can add or remove items here
; REMOVE THE SEMICOLON FROM THE BEGINNING OF THE NEXT LINE TO ENABLE THE CUSTOM MENU STRUCTURE
;MAIN_MENU.Items=COLUMN_PADDING, PROGRAMS, COLUMN_BREAK, FAVORITES, DOCUMENTS, SettingsMenu, SearchMenu, HelpItem, RunItem, SEPARATOR, LogOffItem, UndockItem, DisconnectItem, ShutdownItem

; DOCUMENTS.Items - the extra items to show at the top of the Documents menu. You can add or remove items here
DOCUMENTS.Items=USER_FILES, USER_DOCUMENTS, USER_PICTURES

; SettingsMenu - the name, icon and structure of the Settings menu
SettingsMenu.Items=CONTROL_PANEL, SEPARATOR, NETWORK, PRINTERS, TaskbarSettingsItem, ProgramsSettingsItem, SEPARATOR, ClassicSettingsItem
SettingsMenu.Name=$Menu.Settings
SettingsMenu.Icon=shell32.dll,330

; SearchMenu - the name, icon and sub-items of the Search menu
SearchMenu.Items=SearchFilesItem, SearchPrinterItem, SearchComputersItem, SearchPeopleItem
SearchMenu.Name=$Menu.Search
SearchMenu.Icon=shell32.dll,323

; HelpItem - the name, icon and function of the Help and Support item
HelpItem.Command=help
HelpItem.Name=$Menu.Help
HelpItem.Icon=shell32.dll,324

; RunItem - the name, icon and function of the Run item
RunItem.Command=run
RunItem.Name=$Menu.Run
RunItem.Icon=shell32.dll,328

; LogOffItem - the name, icon and function of the Log Off item
; If the name text contains '%s' it will be replaced by the name of the current user. "Log Off %s" will become "Log Off Smith, John"
LogOffItem.Command=logoff
LogOffItem.Name=$Menu.Logoff
LogOffItem.Icon=shell32.dll,325

; And so on. You get the idea.
UndockItem.Command=undock
UndockItem.Name=$Menu.Undock
UndockItem.Icon=shell32.dll,331

DisconnectItem.Command=disconnect
DisconnectItem.Name=$Menu.Disconnect
DisconnectItem.Icon=shell32.dll,329

ShutdownItem.Command=shutdown_box
ShutdownItem.Name=$Menu.Shutdown
ShutdownItem.Icon=shell32.dll,329

TaskbarSettingsItem.Command=taskbar_settings
TaskbarSettingsItem.Name=$Menu.Taskbar
TaskbarSettingsItem.Icon=shell32.dll,40
TaskbarSettingsItem.Tip=$Menu.TaskbarTip

ProgramsSettingsItem.Command=programs_settings
ProgramsSettingsItem.Name=$Menu.Features
ProgramsSettingsItem.Icon=shell32.dll,271
ProgramsSettingsItem.Tip=$Menu.FeaturesTip

ClassicSettingsItem.Command=menu_settings
ClassicSettingsItem.Name=$Menu.ClassicSettings
ClassicSettingsItem.Icon=ClassicStartMenuDLL.dll,103
ClassicSettingsItem.Tip=$Menu.SettingsTip

SearchFilesItem.Command=search_files
SearchFilesItem.Name=$Menu.SearchFiles
SearchFilesItem.Icon=shell32.dll,134

SearchPrinterItem.Command=search_printer
SearchPrinterItem.Name=$Menu.SearchPrinter
SearchPrinterItem.Icon=shell32.dll,1006

SearchComputersItem.Command=search_computers
SearchComputersItem.Name=$Menu.SearchComputers
SearchComputersItem.Icon=shell32.dll,135

SearchPeopleItem.Command=search_people
SearchPeopleItem.Name=$Menu.SearchPeople
SearchPeopleItem.Icon=shell32.dll,269

; Enable this to make the control panel open in "categories" mode
;CONTROL_PANEL.Command=::{26EE0668-A00A-44D7-9371-BEB064C98683}

; The rest of the settings control the appearance of the standard menu items. They are disabled by default and the start menu uses the default
; values. Enable them if you want to change the name, icon or infotip of the standard items.

;PROGRAMS.Name=$Menu.Programs
;PROGRAMS.Icon=shell32.dll,326
;FAVORITES.Name=$Menu.Favorites
;FAVORITES.Icon=shell32.dll,322
;DOCUMENTS.Name=$Menu.Documents
;DOCUMENTS.Icon=shell32.dll,327
;USER_FILES.Name=
;USER_FILES.Icon=
;USER_FILES.Tip=$Menu.UserFilesTip
;USER_DOCUMENTS.Name=
;USER_DOCUMENTS.Icon=
;USER_DOCUMENTS.Tip=$Menu.UserDocumentsTip
;USER_PICTURES.Name=
;USER_PICTURES.Icon=
;USER_PICTURES.Tip=$Menu.UserPicturesTip
;CONTROL_PANEL.Name=
;CONTROL_PANEL.Icon=shell32.dll,137
;NETWORK.Name=
;NETWORK.Icon=shell32.dll,257
;NETWORK.Tip=$Menu.NetworkTip
;PRINTERS.Name=
;PRINTERS.Icon=shell32.dll,138
;PRINTERS.Tip=Menu.PrintersTip
